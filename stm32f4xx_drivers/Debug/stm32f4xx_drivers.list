
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000860  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000a24  08000a2c  00010a2c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000a24  08000a24  00010a2c  2**0
                  CONTENTS
  4 .ARM          00000000  08000a24  08000a24  00010a2c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000a24  08000a2c  00010a2c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000a24  08000a24  00010a24  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000a28  08000a28  00010a28  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010a2c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000a2c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000a2c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010a2c  2**0
                  CONTENTS, READONLY
 12 .debug_info   000012d6  00000000  00000000  00010a56  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000365  00000000  00000000  00011d2c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c8  00000000  00000000  00012098  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000a0  00000000  00000000  00012160  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001dcd  00000000  00000000  00012200  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000103b  00000000  00000000  00013fcd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00008b30  00000000  00000000  00015008  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0001db38  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000288  00000000  00000000  0001db8c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000a0c 	.word	0x08000a0c

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000a0c 	.word	0x08000a0c

08000204 <delay>:

#include "stm32f446xx.h"
#include <string.h>
//#include "stm32f4xx_gpio_driver.h"
void delay(uint32_t period)
{
 8000204:	b480      	push	{r7}
 8000206:	b085      	sub	sp, #20
 8000208:	af00      	add	r7, sp, #0
 800020a:	6078      	str	r0, [r7, #4]
	for(uint32_t i = 0; i< period; i++);
 800020c:	2300      	movs	r3, #0
 800020e:	60fb      	str	r3, [r7, #12]
 8000210:	e002      	b.n	8000218 <delay+0x14>
 8000212:	68fb      	ldr	r3, [r7, #12]
 8000214:	3301      	adds	r3, #1
 8000216:	60fb      	str	r3, [r7, #12]
 8000218:	68fa      	ldr	r2, [r7, #12]
 800021a:	687b      	ldr	r3, [r7, #4]
 800021c:	429a      	cmp	r2, r3
 800021e:	d3f8      	bcc.n	8000212 <delay+0xe>
}
 8000220:	bf00      	nop
 8000222:	bf00      	nop
 8000224:	3714      	adds	r7, #20
 8000226:	46bd      	mov	sp, r7
 8000228:	bc80      	pop	{r7}
 800022a:	4770      	bx	lr

0800022c <main>:

int main(void)
{
 800022c:	b580      	push	{r7, lr}
 800022e:	b086      	sub	sp, #24
 8000230:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed;
	GPIO_Handle_t GpioBtn;

	memset(&GpioLed,0,sizeof(GpioLed));
 8000232:	f107 030c 	add.w	r3, r7, #12
 8000236:	220c      	movs	r2, #12
 8000238:	2100      	movs	r1, #0
 800023a:	4618      	mov	r0, r3
 800023c:	f000 fbde 	bl	80009fc <memset>
	memset(&GpioBtn,0,sizeof(GpioLed));
 8000240:	463b      	mov	r3, r7
 8000242:	220c      	movs	r2, #12
 8000244:	2100      	movs	r1, #0
 8000246:	4618      	mov	r0, r3
 8000248:	f000 fbd8 	bl	80009fc <memset>

	GpioLed.pGPIOx = GPIOA;
 800024c:	4b17      	ldr	r3, [pc, #92]	; (80002ac <main+0x80>)
 800024e:	60fb      	str	r3, [r7, #12]
	GpioBtn.pGPIOx = GPIOC;
 8000250:	4b17      	ldr	r3, [pc, #92]	; (80002b0 <main+0x84>)
 8000252:	603b      	str	r3, [r7, #0]
	//Led INIT
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 8000254:	2305      	movs	r3, #5
 8000256:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000258:	2302      	movs	r3, #2
 800025a:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800025c:	2300      	movs	r3, #0
 800025e:	74fb      	strb	r3, [r7, #19]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000260:	2301      	movs	r3, #1
 8000262:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000264:	2300      	movs	r3, #0
 8000266:	753b      	strb	r3, [r7, #20]

	GPIO_PeriClockControl(GPIOA, ENABLE);
 8000268:	2101      	movs	r1, #1
 800026a:	4810      	ldr	r0, [pc, #64]	; (80002ac <main+0x80>)
 800026c:	f000 f85e 	bl	800032c <GPIO_PeriClockControl>
	GPIO_Init(&GpioLed);
 8000270:	f107 030c 	add.w	r3, r7, #12
 8000274:	4618      	mov	r0, r3
 8000276:	f000 f92b 	bl	80004d0 <GPIO_Init>

	//Button INIT
	GpioBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 800027a:	230d      	movs	r3, #13
 800027c:	713b      	strb	r3, [r7, #4]
	GpioBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800027e:	2302      	movs	r3, #2
 8000280:	71bb      	strb	r3, [r7, #6]
	GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000282:	2300      	movs	r3, #0
 8000284:	71fb      	strb	r3, [r7, #7]
	GpioBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_RT;
 8000286:	2305      	movs	r3, #5
 8000288:	717b      	strb	r3, [r7, #5]

	GPIO_PeriClockControl(GPIOC, ENABLE);
 800028a:	2101      	movs	r1, #1
 800028c:	4808      	ldr	r0, [pc, #32]	; (80002b0 <main+0x84>)
 800028e:	f000 f84d 	bl	800032c <GPIO_PeriClockControl>
	GPIO_Init(&GpioBtn);
 8000292:	463b      	mov	r3, r7
 8000294:	4618      	mov	r0, r3
 8000296:	f000 f91b 	bl	80004d0 <GPIO_Init>

	//IRQ config
	GPIO_IRQPriorityConfig(IRQ_NO_EXTI15_10, NVIC_IRQ_PRI15);
 800029a:	210f      	movs	r1, #15
 800029c:	2028      	movs	r0, #40	; 0x28
 800029e:	f000 fb3f 	bl	8000920 <GPIO_IRQPriorityConfig>
	GPIO_IRQInterruptConfig(IRQ_NO_EXTI15_10, ENABLE);
 80002a2:	2101      	movs	r1, #1
 80002a4:	2028      	movs	r0, #40	; 0x28
 80002a6:	f000 fab7 	bl	8000818 <GPIO_IRQInterruptConfig>


	while(1);
 80002aa:	e7fe      	b.n	80002aa <main+0x7e>
 80002ac:	40020000 	.word	0x40020000
 80002b0:	40020800 	.word	0x40020800

080002b4 <EXTI15_10_IRQHandler>:
}


void EXTI15_10_IRQHandler(void)
	{
 80002b4:	b580      	push	{r7, lr}
 80002b6:	af00      	add	r7, sp, #0
		delay(500000);  // 500mS delay
 80002b8:	4805      	ldr	r0, [pc, #20]	; (80002d0 <EXTI15_10_IRQHandler+0x1c>)
 80002ba:	f7ff ffa3 	bl	8000204 <delay>
		GPIO_IRQHandling(GPIO_PIN_NO_13);
 80002be:	200d      	movs	r0, #13
 80002c0:	f000 fb58 	bl	8000974 <GPIO_IRQHandling>
		GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);
 80002c4:	2105      	movs	r1, #5
 80002c6:	4803      	ldr	r0, [pc, #12]	; (80002d4 <EXTI15_10_IRQHandler+0x20>)
 80002c8:	f000 fa92 	bl	80007f0 <GPIO_ToggleOutputPin>
	}
 80002cc:	bf00      	nop
 80002ce:	bd80      	pop	{r7, pc}
 80002d0:	0007a120 	.word	0x0007a120
 80002d4:	40020000 	.word	0x40020000

080002d8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002d8:	480d      	ldr	r0, [pc, #52]	; (8000310 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002da:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002dc:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002e0:	480c      	ldr	r0, [pc, #48]	; (8000314 <LoopForever+0x6>)
  ldr r1, =_edata
 80002e2:	490d      	ldr	r1, [pc, #52]	; (8000318 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002e4:	4a0d      	ldr	r2, [pc, #52]	; (800031c <LoopForever+0xe>)
  movs r3, #0
 80002e6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002e8:	e002      	b.n	80002f0 <LoopCopyDataInit>

080002ea <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002ea:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002ec:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002ee:	3304      	adds	r3, #4

080002f0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002f0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002f2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002f4:	d3f9      	bcc.n	80002ea <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002f6:	4a0a      	ldr	r2, [pc, #40]	; (8000320 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002f8:	4c0a      	ldr	r4, [pc, #40]	; (8000324 <LoopForever+0x16>)
  movs r3, #0
 80002fa:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002fc:	e001      	b.n	8000302 <LoopFillZerobss>

080002fe <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002fe:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000300:	3204      	adds	r2, #4

08000302 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000302:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000304:	d3fb      	bcc.n	80002fe <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000306:	f000 fb55 	bl	80009b4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800030a:	f7ff ff8f 	bl	800022c <main>

0800030e <LoopForever>:

LoopForever:
    b LoopForever
 800030e:	e7fe      	b.n	800030e <LoopForever>
  ldr   r0, =_estack
 8000310:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000314:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000318:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800031c:	08000a2c 	.word	0x08000a2c
  ldr r2, =_sbss
 8000320:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000324:	2000001c 	.word	0x2000001c

08000328 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000328:	e7fe      	b.n	8000328 <ADC_IRQHandler>
	...

0800032c <GPIO_PeriClockControl>:
 *  Created on: 19-Jun-2021
 *      Author: 91900
 */
#include "stm32f4xx_gpio_driver.h"

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi){
 800032c:	b480      	push	{r7}
 800032e:	b083      	sub	sp, #12
 8000330:	af00      	add	r7, sp, #0
 8000332:	6078      	str	r0, [r7, #4]
 8000334:	460b      	mov	r3, r1
 8000336:	70fb      	strb	r3, [r7, #3]

	if(EnorDi == ENABLE){
 8000338:	78fb      	ldrb	r3, [r7, #3]
 800033a:	2b01      	cmp	r3, #1
 800033c:	d157      	bne.n	80003ee <GPIO_PeriClockControl+0xc2>
		if (pGPIOx == GPIOA) GPIOA_PCLK_EN();
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	4a5a      	ldr	r2, [pc, #360]	; (80004ac <GPIO_PeriClockControl+0x180>)
 8000342:	4293      	cmp	r3, r2
 8000344:	d106      	bne.n	8000354 <GPIO_PeriClockControl+0x28>
 8000346:	4b5a      	ldr	r3, [pc, #360]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 8000348:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800034a:	4a59      	ldr	r2, [pc, #356]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 800034c:	f043 0301 	orr.w	r3, r3, #1
 8000350:	6313      	str	r3, [r2, #48]	; 0x30
				else if (pGPIOx == GPIOG) GPIOG_PCLK_DI();
				else if (pGPIOx == GPIOH) GPIOH_PCLK_DI();
			}
	}

}
 8000352:	e0a6      	b.n	80004a2 <GPIO_PeriClockControl+0x176>
		else if (pGPIOx == GPIOB) GPIOB_PCLK_EN();
 8000354:	687b      	ldr	r3, [r7, #4]
 8000356:	4a57      	ldr	r2, [pc, #348]	; (80004b4 <GPIO_PeriClockControl+0x188>)
 8000358:	4293      	cmp	r3, r2
 800035a:	d106      	bne.n	800036a <GPIO_PeriClockControl+0x3e>
 800035c:	4b54      	ldr	r3, [pc, #336]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 800035e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000360:	4a53      	ldr	r2, [pc, #332]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 8000362:	f043 0302 	orr.w	r3, r3, #2
 8000366:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000368:	e09b      	b.n	80004a2 <GPIO_PeriClockControl+0x176>
		else if (pGPIOx == GPIOC) GPIOC_PCLK_EN();
 800036a:	687b      	ldr	r3, [r7, #4]
 800036c:	4a52      	ldr	r2, [pc, #328]	; (80004b8 <GPIO_PeriClockControl+0x18c>)
 800036e:	4293      	cmp	r3, r2
 8000370:	d106      	bne.n	8000380 <GPIO_PeriClockControl+0x54>
 8000372:	4b4f      	ldr	r3, [pc, #316]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 8000374:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000376:	4a4e      	ldr	r2, [pc, #312]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 8000378:	f043 0304 	orr.w	r3, r3, #4
 800037c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800037e:	e090      	b.n	80004a2 <GPIO_PeriClockControl+0x176>
		else if (pGPIOx == GPIOD) GPIOD_PCLK_EN();
 8000380:	687b      	ldr	r3, [r7, #4]
 8000382:	4a4e      	ldr	r2, [pc, #312]	; (80004bc <GPIO_PeriClockControl+0x190>)
 8000384:	4293      	cmp	r3, r2
 8000386:	d106      	bne.n	8000396 <GPIO_PeriClockControl+0x6a>
 8000388:	4b49      	ldr	r3, [pc, #292]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 800038a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800038c:	4a48      	ldr	r2, [pc, #288]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 800038e:	f043 0308 	orr.w	r3, r3, #8
 8000392:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000394:	e085      	b.n	80004a2 <GPIO_PeriClockControl+0x176>
		else if (pGPIOx == GPIOE) GPIOE_PCLK_EN();
 8000396:	687b      	ldr	r3, [r7, #4]
 8000398:	4a49      	ldr	r2, [pc, #292]	; (80004c0 <GPIO_PeriClockControl+0x194>)
 800039a:	4293      	cmp	r3, r2
 800039c:	d106      	bne.n	80003ac <GPIO_PeriClockControl+0x80>
 800039e:	4b44      	ldr	r3, [pc, #272]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 80003a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003a2:	4a43      	ldr	r2, [pc, #268]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 80003a4:	f043 0310 	orr.w	r3, r3, #16
 80003a8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003aa:	e07a      	b.n	80004a2 <GPIO_PeriClockControl+0x176>
		else if (pGPIOx == GPIOF) GPIOF_PCLK_EN();
 80003ac:	687b      	ldr	r3, [r7, #4]
 80003ae:	4a45      	ldr	r2, [pc, #276]	; (80004c4 <GPIO_PeriClockControl+0x198>)
 80003b0:	4293      	cmp	r3, r2
 80003b2:	d106      	bne.n	80003c2 <GPIO_PeriClockControl+0x96>
 80003b4:	4b3e      	ldr	r3, [pc, #248]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 80003b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003b8:	4a3d      	ldr	r2, [pc, #244]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 80003ba:	f043 0320 	orr.w	r3, r3, #32
 80003be:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003c0:	e06f      	b.n	80004a2 <GPIO_PeriClockControl+0x176>
		else if (pGPIOx == GPIOG) GPIOG_PCLK_EN();
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	4a40      	ldr	r2, [pc, #256]	; (80004c8 <GPIO_PeriClockControl+0x19c>)
 80003c6:	4293      	cmp	r3, r2
 80003c8:	d106      	bne.n	80003d8 <GPIO_PeriClockControl+0xac>
 80003ca:	4b39      	ldr	r3, [pc, #228]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 80003cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ce:	4a38      	ldr	r2, [pc, #224]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 80003d0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80003d4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003d6:	e064      	b.n	80004a2 <GPIO_PeriClockControl+0x176>
		else if (pGPIOx == GPIOH) GPIOH_PCLK_EN();
 80003d8:	687b      	ldr	r3, [r7, #4]
 80003da:	4a3c      	ldr	r2, [pc, #240]	; (80004cc <GPIO_PeriClockControl+0x1a0>)
 80003dc:	4293      	cmp	r3, r2
 80003de:	d160      	bne.n	80004a2 <GPIO_PeriClockControl+0x176>
 80003e0:	4b33      	ldr	r3, [pc, #204]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 80003e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003e4:	4a32      	ldr	r2, [pc, #200]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 80003e6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003ea:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ec:	e059      	b.n	80004a2 <GPIO_PeriClockControl+0x176>
		if(EnorDi == DISABLE){
 80003ee:	78fb      	ldrb	r3, [r7, #3]
 80003f0:	2b00      	cmp	r3, #0
 80003f2:	d156      	bne.n	80004a2 <GPIO_PeriClockControl+0x176>
				if (pGPIOx == GPIOA) GPIOA_PCLK_DI();
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	4a2d      	ldr	r2, [pc, #180]	; (80004ac <GPIO_PeriClockControl+0x180>)
 80003f8:	4293      	cmp	r3, r2
 80003fa:	d106      	bne.n	800040a <GPIO_PeriClockControl+0xde>
 80003fc:	4b2c      	ldr	r3, [pc, #176]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 80003fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000400:	4a2b      	ldr	r2, [pc, #172]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 8000402:	f023 0301 	bic.w	r3, r3, #1
 8000406:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000408:	e04b      	b.n	80004a2 <GPIO_PeriClockControl+0x176>
				else if (pGPIOx == GPIOB) GPIOB_PCLK_DI();
 800040a:	687b      	ldr	r3, [r7, #4]
 800040c:	4a29      	ldr	r2, [pc, #164]	; (80004b4 <GPIO_PeriClockControl+0x188>)
 800040e:	4293      	cmp	r3, r2
 8000410:	d106      	bne.n	8000420 <GPIO_PeriClockControl+0xf4>
 8000412:	4b27      	ldr	r3, [pc, #156]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 8000414:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000416:	4a26      	ldr	r2, [pc, #152]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 8000418:	f023 0302 	bic.w	r3, r3, #2
 800041c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800041e:	e040      	b.n	80004a2 <GPIO_PeriClockControl+0x176>
				else if (pGPIOx == GPIOC) GPIOC_PCLK_DI();
 8000420:	687b      	ldr	r3, [r7, #4]
 8000422:	4a25      	ldr	r2, [pc, #148]	; (80004b8 <GPIO_PeriClockControl+0x18c>)
 8000424:	4293      	cmp	r3, r2
 8000426:	d106      	bne.n	8000436 <GPIO_PeriClockControl+0x10a>
 8000428:	4b21      	ldr	r3, [pc, #132]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 800042a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800042c:	4a20      	ldr	r2, [pc, #128]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 800042e:	f023 0304 	bic.w	r3, r3, #4
 8000432:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000434:	e035      	b.n	80004a2 <GPIO_PeriClockControl+0x176>
				else if (pGPIOx == GPIOD) GPIOD_PCLK_DI();
 8000436:	687b      	ldr	r3, [r7, #4]
 8000438:	4a20      	ldr	r2, [pc, #128]	; (80004bc <GPIO_PeriClockControl+0x190>)
 800043a:	4293      	cmp	r3, r2
 800043c:	d106      	bne.n	800044c <GPIO_PeriClockControl+0x120>
 800043e:	4b1c      	ldr	r3, [pc, #112]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 8000440:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000442:	4a1b      	ldr	r2, [pc, #108]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 8000444:	f023 0308 	bic.w	r3, r3, #8
 8000448:	6313      	str	r3, [r2, #48]	; 0x30
}
 800044a:	e02a      	b.n	80004a2 <GPIO_PeriClockControl+0x176>
				else if (pGPIOx == GPIOE) GPIOE_PCLK_DI();
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	4a1c      	ldr	r2, [pc, #112]	; (80004c0 <GPIO_PeriClockControl+0x194>)
 8000450:	4293      	cmp	r3, r2
 8000452:	d106      	bne.n	8000462 <GPIO_PeriClockControl+0x136>
 8000454:	4b16      	ldr	r3, [pc, #88]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 8000456:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000458:	4a15      	ldr	r2, [pc, #84]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 800045a:	f023 0310 	bic.w	r3, r3, #16
 800045e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000460:	e01f      	b.n	80004a2 <GPIO_PeriClockControl+0x176>
				else if (pGPIOx == GPIOF) GPIOF_PCLK_DI();
 8000462:	687b      	ldr	r3, [r7, #4]
 8000464:	4a17      	ldr	r2, [pc, #92]	; (80004c4 <GPIO_PeriClockControl+0x198>)
 8000466:	4293      	cmp	r3, r2
 8000468:	d106      	bne.n	8000478 <GPIO_PeriClockControl+0x14c>
 800046a:	4b11      	ldr	r3, [pc, #68]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 800046c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800046e:	4a10      	ldr	r2, [pc, #64]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 8000470:	f023 0320 	bic.w	r3, r3, #32
 8000474:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000476:	e014      	b.n	80004a2 <GPIO_PeriClockControl+0x176>
				else if (pGPIOx == GPIOG) GPIOG_PCLK_DI();
 8000478:	687b      	ldr	r3, [r7, #4]
 800047a:	4a13      	ldr	r2, [pc, #76]	; (80004c8 <GPIO_PeriClockControl+0x19c>)
 800047c:	4293      	cmp	r3, r2
 800047e:	d106      	bne.n	800048e <GPIO_PeriClockControl+0x162>
 8000480:	4b0b      	ldr	r3, [pc, #44]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 8000482:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000484:	4a0a      	ldr	r2, [pc, #40]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 8000486:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800048a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800048c:	e009      	b.n	80004a2 <GPIO_PeriClockControl+0x176>
				else if (pGPIOx == GPIOH) GPIOH_PCLK_DI();
 800048e:	687b      	ldr	r3, [r7, #4]
 8000490:	4a0e      	ldr	r2, [pc, #56]	; (80004cc <GPIO_PeriClockControl+0x1a0>)
 8000492:	4293      	cmp	r3, r2
 8000494:	d105      	bne.n	80004a2 <GPIO_PeriClockControl+0x176>
 8000496:	4b06      	ldr	r3, [pc, #24]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 8000498:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800049a:	4a05      	ldr	r2, [pc, #20]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 800049c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80004a0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004a2:	bf00      	nop
 80004a4:	370c      	adds	r7, #12
 80004a6:	46bd      	mov	sp, r7
 80004a8:	bc80      	pop	{r7}
 80004aa:	4770      	bx	lr
 80004ac:	40020000 	.word	0x40020000
 80004b0:	40023800 	.word	0x40023800
 80004b4:	40020400 	.word	0x40020400
 80004b8:	40020800 	.word	0x40020800
 80004bc:	40020c00 	.word	0x40020c00
 80004c0:	40021000 	.word	0x40021000
 80004c4:	40021400 	.word	0x40021400
 80004c8:	40021800 	.word	0x40021800
 80004cc:	40021c00 	.word	0x40021c00

080004d0 <GPIO_Init>:
 *
 * @return            - none
 *
 * @Note              - Be careful while assigning a bit to the register, do not directly assign it, use bitwise operators.
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 80004d0:	b480      	push	{r7}
 80004d2:	b087      	sub	sp, #28
 80004d4:	af00      	add	r7, sp, #0
 80004d6:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 80004d8:	2300      	movs	r3, #0
 80004da:	617b      	str	r3, [r7, #20]
	//1. Config the mode of the gpio
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){
 80004dc:	687b      	ldr	r3, [r7, #4]
 80004de:	795b      	ldrb	r3, [r3, #5]
 80004e0:	2b03      	cmp	r3, #3
 80004e2:	d820      	bhi.n	8000526 <GPIO_Init+0x56>
		temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 *pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	795b      	ldrb	r3, [r3, #5]
 80004e8:	461a      	mov	r2, r3
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	791b      	ldrb	r3, [r3, #4]
 80004ee:	005b      	lsls	r3, r3, #1
 80004f0:	fa02 f303 	lsl.w	r3, r2, r3
 80004f4:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x03 << temp);
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	681b      	ldr	r3, [r3, #0]
 80004fa:	681a      	ldr	r2, [r3, #0]
 80004fc:	2103      	movs	r1, #3
 80004fe:	697b      	ldr	r3, [r7, #20]
 8000500:	fa01 f303 	lsl.w	r3, r1, r3
 8000504:	43db      	mvns	r3, r3
 8000506:	4619      	mov	r1, r3
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	400a      	ands	r2, r1
 800050e:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	681b      	ldr	r3, [r3, #0]
 8000514:	6819      	ldr	r1, [r3, #0]
 8000516:	687b      	ldr	r3, [r7, #4]
 8000518:	681b      	ldr	r3, [r3, #0]
 800051a:	697a      	ldr	r2, [r7, #20]
 800051c:	430a      	orrs	r2, r1
 800051e:	601a      	str	r2, [r3, #0]
		temp = 0;
 8000520:	2300      	movs	r3, #0
 8000522:	617b      	str	r3, [r7, #20]
 8000524:	e0c1      	b.n	80006aa <GPIO_Init+0x1da>
			 * 4. Identify the IRQ number
			 * 5. Configure the IRQ priority (Processor side)
			 * 6. Enable the interrupt reception (Processor side )
			 * 7. Implement the handler
			 */
			if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	795b      	ldrb	r3, [r3, #5]
 800052a:	2b04      	cmp	r3, #4
 800052c:	d117      	bne.n	800055e <GPIO_Init+0x8e>
			{
				EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800052e:	4b47      	ldr	r3, [pc, #284]	; (800064c <GPIO_Init+0x17c>)
 8000530:	68db      	ldr	r3, [r3, #12]
 8000532:	687a      	ldr	r2, [r7, #4]
 8000534:	7912      	ldrb	r2, [r2, #4]
 8000536:	4611      	mov	r1, r2
 8000538:	2201      	movs	r2, #1
 800053a:	408a      	lsls	r2, r1
 800053c:	4611      	mov	r1, r2
 800053e:	4a43      	ldr	r2, [pc, #268]	; (800064c <GPIO_Init+0x17c>)
 8000540:	430b      	orrs	r3, r1
 8000542:	60d3      	str	r3, [r2, #12]
				// Clear the corresponding RTSR bit
				EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000544:	4b41      	ldr	r3, [pc, #260]	; (800064c <GPIO_Init+0x17c>)
 8000546:	689b      	ldr	r3, [r3, #8]
 8000548:	687a      	ldr	r2, [r7, #4]
 800054a:	7912      	ldrb	r2, [r2, #4]
 800054c:	4611      	mov	r1, r2
 800054e:	2201      	movs	r2, #1
 8000550:	408a      	lsls	r2, r1
 8000552:	43d2      	mvns	r2, r2
 8000554:	4611      	mov	r1, r2
 8000556:	4a3d      	ldr	r2, [pc, #244]	; (800064c <GPIO_Init+0x17c>)
 8000558:	400b      	ands	r3, r1
 800055a:	6093      	str	r3, [r2, #8]
 800055c:	e035      	b.n	80005ca <GPIO_Init+0xfa>
			}
			else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	795b      	ldrb	r3, [r3, #5]
 8000562:	2b05      	cmp	r3, #5
 8000564:	d117      	bne.n	8000596 <GPIO_Init+0xc6>
			{
				EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000566:	4b39      	ldr	r3, [pc, #228]	; (800064c <GPIO_Init+0x17c>)
 8000568:	689b      	ldr	r3, [r3, #8]
 800056a:	687a      	ldr	r2, [r7, #4]
 800056c:	7912      	ldrb	r2, [r2, #4]
 800056e:	4611      	mov	r1, r2
 8000570:	2201      	movs	r2, #1
 8000572:	408a      	lsls	r2, r1
 8000574:	4611      	mov	r1, r2
 8000576:	4a35      	ldr	r2, [pc, #212]	; (800064c <GPIO_Init+0x17c>)
 8000578:	430b      	orrs	r3, r1
 800057a:	6093      	str	r3, [r2, #8]
				// Clear the corresponding FTSR bit
				EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800057c:	4b33      	ldr	r3, [pc, #204]	; (800064c <GPIO_Init+0x17c>)
 800057e:	68db      	ldr	r3, [r3, #12]
 8000580:	687a      	ldr	r2, [r7, #4]
 8000582:	7912      	ldrb	r2, [r2, #4]
 8000584:	4611      	mov	r1, r2
 8000586:	2201      	movs	r2, #1
 8000588:	408a      	lsls	r2, r1
 800058a:	43d2      	mvns	r2, r2
 800058c:	4611      	mov	r1, r2
 800058e:	4a2f      	ldr	r2, [pc, #188]	; (800064c <GPIO_Init+0x17c>)
 8000590:	400b      	ands	r3, r1
 8000592:	60d3      	str	r3, [r2, #12]
 8000594:	e019      	b.n	80005ca <GPIO_Init+0xfa>
			}
			else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	795b      	ldrb	r3, [r3, #5]
 800059a:	2b06      	cmp	r3, #6
 800059c:	d115      	bne.n	80005ca <GPIO_Init+0xfa>
			{
				EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800059e:	4b2b      	ldr	r3, [pc, #172]	; (800064c <GPIO_Init+0x17c>)
 80005a0:	68db      	ldr	r3, [r3, #12]
 80005a2:	687a      	ldr	r2, [r7, #4]
 80005a4:	7912      	ldrb	r2, [r2, #4]
 80005a6:	4611      	mov	r1, r2
 80005a8:	2201      	movs	r2, #1
 80005aa:	408a      	lsls	r2, r1
 80005ac:	4611      	mov	r1, r2
 80005ae:	4a27      	ldr	r2, [pc, #156]	; (800064c <GPIO_Init+0x17c>)
 80005b0:	430b      	orrs	r3, r1
 80005b2:	60d3      	str	r3, [r2, #12]
				EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005b4:	4b25      	ldr	r3, [pc, #148]	; (800064c <GPIO_Init+0x17c>)
 80005b6:	689b      	ldr	r3, [r3, #8]
 80005b8:	687a      	ldr	r2, [r7, #4]
 80005ba:	7912      	ldrb	r2, [r2, #4]
 80005bc:	4611      	mov	r1, r2
 80005be:	2201      	movs	r2, #1
 80005c0:	408a      	lsls	r2, r1
 80005c2:	4611      	mov	r1, r2
 80005c4:	4a21      	ldr	r2, [pc, #132]	; (800064c <GPIO_Init+0x17c>)
 80005c6:	430b      	orrs	r3, r1
 80005c8:	6093      	str	r3, [r2, #8]
			}

			uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 80005ca:	687b      	ldr	r3, [r7, #4]
 80005cc:	791b      	ldrb	r3, [r3, #4]
 80005ce:	089b      	lsrs	r3, r3, #2
 80005d0:	74fb      	strb	r3, [r7, #19]
			uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80005d2:	687b      	ldr	r3, [r7, #4]
 80005d4:	791b      	ldrb	r3, [r3, #4]
 80005d6:	f003 0303 	and.w	r3, r3, #3
 80005da:	74bb      	strb	r3, [r7, #18]
			uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80005dc:	687b      	ldr	r3, [r7, #4]
 80005de:	681b      	ldr	r3, [r3, #0]
 80005e0:	4a1b      	ldr	r2, [pc, #108]	; (8000650 <GPIO_Init+0x180>)
 80005e2:	4293      	cmp	r3, r2
 80005e4:	d044      	beq.n	8000670 <GPIO_Init+0x1a0>
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	681b      	ldr	r3, [r3, #0]
 80005ea:	4a1a      	ldr	r2, [pc, #104]	; (8000654 <GPIO_Init+0x184>)
 80005ec:	4293      	cmp	r3, r2
 80005ee:	d02b      	beq.n	8000648 <GPIO_Init+0x178>
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	681b      	ldr	r3, [r3, #0]
 80005f4:	4a18      	ldr	r2, [pc, #96]	; (8000658 <GPIO_Init+0x188>)
 80005f6:	4293      	cmp	r3, r2
 80005f8:	d024      	beq.n	8000644 <GPIO_Init+0x174>
 80005fa:	687b      	ldr	r3, [r7, #4]
 80005fc:	681b      	ldr	r3, [r3, #0]
 80005fe:	4a17      	ldr	r2, [pc, #92]	; (800065c <GPIO_Init+0x18c>)
 8000600:	4293      	cmp	r3, r2
 8000602:	d01d      	beq.n	8000640 <GPIO_Init+0x170>
 8000604:	687b      	ldr	r3, [r7, #4]
 8000606:	681b      	ldr	r3, [r3, #0]
 8000608:	4a15      	ldr	r2, [pc, #84]	; (8000660 <GPIO_Init+0x190>)
 800060a:	4293      	cmp	r3, r2
 800060c:	d016      	beq.n	800063c <GPIO_Init+0x16c>
 800060e:	687b      	ldr	r3, [r7, #4]
 8000610:	681b      	ldr	r3, [r3, #0]
 8000612:	4a14      	ldr	r2, [pc, #80]	; (8000664 <GPIO_Init+0x194>)
 8000614:	4293      	cmp	r3, r2
 8000616:	d00f      	beq.n	8000638 <GPIO_Init+0x168>
 8000618:	687b      	ldr	r3, [r7, #4]
 800061a:	681b      	ldr	r3, [r3, #0]
 800061c:	4a12      	ldr	r2, [pc, #72]	; (8000668 <GPIO_Init+0x198>)
 800061e:	4293      	cmp	r3, r2
 8000620:	d008      	beq.n	8000634 <GPIO_Init+0x164>
 8000622:	687b      	ldr	r3, [r7, #4]
 8000624:	681b      	ldr	r3, [r3, #0]
 8000626:	4a11      	ldr	r2, [pc, #68]	; (800066c <GPIO_Init+0x19c>)
 8000628:	4293      	cmp	r3, r2
 800062a:	d101      	bne.n	8000630 <GPIO_Init+0x160>
 800062c:	2307      	movs	r3, #7
 800062e:	e020      	b.n	8000672 <GPIO_Init+0x1a2>
 8000630:	2300      	movs	r3, #0
 8000632:	e01e      	b.n	8000672 <GPIO_Init+0x1a2>
 8000634:	2306      	movs	r3, #6
 8000636:	e01c      	b.n	8000672 <GPIO_Init+0x1a2>
 8000638:	2305      	movs	r3, #5
 800063a:	e01a      	b.n	8000672 <GPIO_Init+0x1a2>
 800063c:	2304      	movs	r3, #4
 800063e:	e018      	b.n	8000672 <GPIO_Init+0x1a2>
 8000640:	2303      	movs	r3, #3
 8000642:	e016      	b.n	8000672 <GPIO_Init+0x1a2>
 8000644:	2302      	movs	r3, #2
 8000646:	e014      	b.n	8000672 <GPIO_Init+0x1a2>
 8000648:	2301      	movs	r3, #1
 800064a:	e012      	b.n	8000672 <GPIO_Init+0x1a2>
 800064c:	40013c00 	.word	0x40013c00
 8000650:	40020000 	.word	0x40020000
 8000654:	40020400 	.word	0x40020400
 8000658:	40020800 	.word	0x40020800
 800065c:	40020c00 	.word	0x40020c00
 8000660:	40021000 	.word	0x40021000
 8000664:	40021400 	.word	0x40021400
 8000668:	40021800 	.word	0x40021800
 800066c:	40021c00 	.word	0x40021c00
 8000670:	2300      	movs	r3, #0
 8000672:	747b      	strb	r3, [r7, #17]
			SYSCFG_PCLK_EN();
 8000674:	4b5b      	ldr	r3, [pc, #364]	; (80007e4 <GPIO_Init+0x314>)
 8000676:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000678:	4a5a      	ldr	r2, [pc, #360]	; (80007e4 <GPIO_Init+0x314>)
 800067a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800067e:	6453      	str	r3, [r2, #68]	; 0x44
			SYSCFG->EXTICR[temp1] = portcode << (4 * temp2);
 8000680:	7c7a      	ldrb	r2, [r7, #17]
 8000682:	7cbb      	ldrb	r3, [r7, #18]
 8000684:	009b      	lsls	r3, r3, #2
 8000686:	fa02 f103 	lsl.w	r1, r2, r3
 800068a:	4a57      	ldr	r2, [pc, #348]	; (80007e8 <GPIO_Init+0x318>)
 800068c:	7cfb      	ldrb	r3, [r7, #19]
 800068e:	3302      	adds	r3, #2
 8000690:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

			EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000694:	4b55      	ldr	r3, [pc, #340]	; (80007ec <GPIO_Init+0x31c>)
 8000696:	681b      	ldr	r3, [r3, #0]
 8000698:	687a      	ldr	r2, [r7, #4]
 800069a:	7912      	ldrb	r2, [r2, #4]
 800069c:	4611      	mov	r1, r2
 800069e:	2201      	movs	r2, #1
 80006a0:	408a      	lsls	r2, r1
 80006a2:	4611      	mov	r1, r2
 80006a4:	4a51      	ldr	r2, [pc, #324]	; (80007ec <GPIO_Init+0x31c>)
 80006a6:	430b      	orrs	r3, r1
 80006a8:	6013      	str	r3, [r2, #0]

		}

	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 *pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006aa:	687b      	ldr	r3, [r7, #4]
 80006ac:	799b      	ldrb	r3, [r3, #6]
 80006ae:	461a      	mov	r2, r3
 80006b0:	687b      	ldr	r3, [r7, #4]
 80006b2:	791b      	ldrb	r3, [r3, #4]
 80006b4:	005b      	lsls	r3, r3, #1
 80006b6:	fa02 f303 	lsl.w	r3, r2, r3
 80006ba:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDER &= ~(0x33 << temp);
 80006bc:	687b      	ldr	r3, [r7, #4]
 80006be:	681b      	ldr	r3, [r3, #0]
 80006c0:	689a      	ldr	r2, [r3, #8]
 80006c2:	2133      	movs	r1, #51	; 0x33
 80006c4:	697b      	ldr	r3, [r7, #20]
 80006c6:	fa01 f303 	lsl.w	r3, r1, r3
 80006ca:	43db      	mvns	r3, r3
 80006cc:	4619      	mov	r1, r3
 80006ce:	687b      	ldr	r3, [r7, #4]
 80006d0:	681b      	ldr	r3, [r3, #0]
 80006d2:	400a      	ands	r2, r1
 80006d4:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDER |= temp;
 80006d6:	687b      	ldr	r3, [r7, #4]
 80006d8:	681b      	ldr	r3, [r3, #0]
 80006da:	6899      	ldr	r1, [r3, #8]
 80006dc:	687b      	ldr	r3, [r7, #4]
 80006de:	681b      	ldr	r3, [r3, #0]
 80006e0:	697a      	ldr	r2, [r7, #20]
 80006e2:	430a      	orrs	r2, r1
 80006e4:	609a      	str	r2, [r3, #8]
	temp = 0;
 80006e6:	2300      	movs	r3, #0
 80006e8:	617b      	str	r3, [r7, #20]

	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 *pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006ea:	687b      	ldr	r3, [r7, #4]
 80006ec:	79db      	ldrb	r3, [r3, #7]
 80006ee:	461a      	mov	r2, r3
 80006f0:	687b      	ldr	r3, [r7, #4]
 80006f2:	791b      	ldrb	r3, [r3, #4]
 80006f4:	005b      	lsls	r3, r3, #1
 80006f6:	fa02 f303 	lsl.w	r3, r2, r3
 80006fa:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x33 << temp);
 80006fc:	687b      	ldr	r3, [r7, #4]
 80006fe:	681b      	ldr	r3, [r3, #0]
 8000700:	68da      	ldr	r2, [r3, #12]
 8000702:	2133      	movs	r1, #51	; 0x33
 8000704:	697b      	ldr	r3, [r7, #20]
 8000706:	fa01 f303 	lsl.w	r3, r1, r3
 800070a:	43db      	mvns	r3, r3
 800070c:	4619      	mov	r1, r3
 800070e:	687b      	ldr	r3, [r7, #4]
 8000710:	681b      	ldr	r3, [r3, #0]
 8000712:	400a      	ands	r2, r1
 8000714:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000716:	687b      	ldr	r3, [r7, #4]
 8000718:	681b      	ldr	r3, [r3, #0]
 800071a:	68d9      	ldr	r1, [r3, #12]
 800071c:	687b      	ldr	r3, [r7, #4]
 800071e:	681b      	ldr	r3, [r3, #0]
 8000720:	697a      	ldr	r2, [r7, #20]
 8000722:	430a      	orrs	r2, r1
 8000724:	60da      	str	r2, [r3, #12]
	temp = 0;
 8000726:	2300      	movs	r3, #0
 8000728:	617b      	str	r3, [r7, #20]

	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800072a:	687b      	ldr	r3, [r7, #4]
 800072c:	7a1b      	ldrb	r3, [r3, #8]
 800072e:	461a      	mov	r2, r3
 8000730:	687b      	ldr	r3, [r7, #4]
 8000732:	791b      	ldrb	r3, [r3, #4]
 8000734:	fa02 f303 	lsl.w	r3, r2, r3
 8000738:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x01 << temp);
 800073a:	687b      	ldr	r3, [r7, #4]
 800073c:	681b      	ldr	r3, [r3, #0]
 800073e:	685a      	ldr	r2, [r3, #4]
 8000740:	2101      	movs	r1, #1
 8000742:	697b      	ldr	r3, [r7, #20]
 8000744:	fa01 f303 	lsl.w	r3, r1, r3
 8000748:	43db      	mvns	r3, r3
 800074a:	4619      	mov	r1, r3
 800074c:	687b      	ldr	r3, [r7, #4]
 800074e:	681b      	ldr	r3, [r3, #0]
 8000750:	400a      	ands	r2, r1
 8000752:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000754:	687b      	ldr	r3, [r7, #4]
 8000756:	681b      	ldr	r3, [r3, #0]
 8000758:	6859      	ldr	r1, [r3, #4]
 800075a:	687b      	ldr	r3, [r7, #4]
 800075c:	681b      	ldr	r3, [r3, #0]
 800075e:	697a      	ldr	r2, [r7, #20]
 8000760:	430a      	orrs	r2, r1
 8000762:	605a      	str	r2, [r3, #4]
	temp = 0;
 8000764:	2300      	movs	r3, #0
 8000766:	617b      	str	r3, [r7, #20]

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode == GPIO_MODE_ALTFN)
 8000768:	687b      	ldr	r3, [r7, #4]
 800076a:	7a5b      	ldrb	r3, [r3, #9]
 800076c:	2b02      	cmp	r3, #2
 800076e:	d134      	bne.n	80007da <GPIO_Init+0x30a>
	{
		uint32_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000770:	687b      	ldr	r3, [r7, #4]
 8000772:	791b      	ldrb	r3, [r3, #4]
 8000774:	08db      	lsrs	r3, r3, #3
 8000776:	b2db      	uxtb	r3, r3
 8000778:	60fb      	str	r3, [r7, #12]
		uint32_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 800077a:	687b      	ldr	r3, [r7, #4]
 800077c:	791b      	ldrb	r3, [r3, #4]
 800077e:	f003 0307 	and.w	r3, r3, #7
 8000782:	60bb      	str	r3, [r7, #8]
		temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2);
 8000784:	687b      	ldr	r3, [r7, #4]
 8000786:	7a5b      	ldrb	r3, [r3, #9]
 8000788:	461a      	mov	r2, r3
 800078a:	68bb      	ldr	r3, [r7, #8]
 800078c:	009b      	lsls	r3, r3, #2
 800078e:	fa02 f303 	lsl.w	r3, r2, r3
 8000792:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << temp);
 8000794:	687b      	ldr	r3, [r7, #4]
 8000796:	681b      	ldr	r3, [r3, #0]
 8000798:	68fa      	ldr	r2, [r7, #12]
 800079a:	3208      	adds	r2, #8
 800079c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80007a0:	210f      	movs	r1, #15
 80007a2:	697b      	ldr	r3, [r7, #20]
 80007a4:	fa01 f303 	lsl.w	r3, r1, r3
 80007a8:	43db      	mvns	r3, r3
 80007aa:	4619      	mov	r1, r3
 80007ac:	687b      	ldr	r3, [r7, #4]
 80007ae:	681b      	ldr	r3, [r3, #0]
 80007b0:	4011      	ands	r1, r2
 80007b2:	68fa      	ldr	r2, [r7, #12]
 80007b4:	3208      	adds	r2, #8
 80007b6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= temp;
 80007ba:	687b      	ldr	r3, [r7, #4]
 80007bc:	681b      	ldr	r3, [r3, #0]
 80007be:	68fa      	ldr	r2, [r7, #12]
 80007c0:	3208      	adds	r2, #8
 80007c2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80007c6:	687b      	ldr	r3, [r7, #4]
 80007c8:	681b      	ldr	r3, [r3, #0]
 80007ca:	697a      	ldr	r2, [r7, #20]
 80007cc:	4311      	orrs	r1, r2
 80007ce:	68fa      	ldr	r2, [r7, #12]
 80007d0:	3208      	adds	r2, #8
 80007d2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		temp = 0;
 80007d6:	2300      	movs	r3, #0
 80007d8:	617b      	str	r3, [r7, #20]
	}


}
 80007da:	bf00      	nop
 80007dc:	371c      	adds	r7, #28
 80007de:	46bd      	mov	sp, r7
 80007e0:	bc80      	pop	{r7}
 80007e2:	4770      	bx	lr
 80007e4:	40023800 	.word	0x40023800
 80007e8:	40013800 	.word	0x40013800
 80007ec:	40013c00 	.word	0x40013c00

080007f0 <GPIO_ToggleOutputPin>:
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint8_t Value)
{
	if(Value) pGPIOx->ODR = Value;
}
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80007f0:	b480      	push	{r7}
 80007f2:	b083      	sub	sp, #12
 80007f4:	af00      	add	r7, sp, #0
 80007f6:	6078      	str	r0, [r7, #4]
 80007f8:	460b      	mov	r3, r1
 80007fa:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1<< PinNumber);
 80007fc:	687b      	ldr	r3, [r7, #4]
 80007fe:	695b      	ldr	r3, [r3, #20]
 8000800:	78fa      	ldrb	r2, [r7, #3]
 8000802:	2101      	movs	r1, #1
 8000804:	fa01 f202 	lsl.w	r2, r1, r2
 8000808:	405a      	eors	r2, r3
 800080a:	687b      	ldr	r3, [r7, #4]
 800080c:	615a      	str	r2, [r3, #20]
}
 800080e:	bf00      	nop
 8000810:	370c      	adds	r7, #12
 8000812:	46bd      	mov	sp, r7
 8000814:	bc80      	pop	{r7}
 8000816:	4770      	bx	lr

08000818 <GPIO_IRQInterruptConfig>:
 * @return            -
 *
 * @Note              -
 */
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi)
{
 8000818:	b480      	push	{r7}
 800081a:	b083      	sub	sp, #12
 800081c:	af00      	add	r7, sp, #0
 800081e:	4603      	mov	r3, r0
 8000820:	460a      	mov	r2, r1
 8000822:	71fb      	strb	r3, [r7, #7]
 8000824:	4613      	mov	r3, r2
 8000826:	71bb      	strb	r3, [r7, #6]
	if(EnorDi == ENABLE)
 8000828:	79bb      	ldrb	r3, [r7, #6]
 800082a:	2b01      	cmp	r3, #1
 800082c:	d133      	bne.n	8000896 <GPIO_IRQInterruptConfig+0x7e>
		{
			if(IRQNumber <= 31)
 800082e:	79fb      	ldrb	r3, [r7, #7]
 8000830:	2b1f      	cmp	r3, #31
 8000832:	d80a      	bhi.n	800084a <GPIO_IRQInterruptConfig+0x32>
			{
				//program ISER0 register
				*NVIC_ISER0 |= ( 1 << IRQNumber );
 8000834:	4b34      	ldr	r3, [pc, #208]	; (8000908 <GPIO_IRQInterruptConfig+0xf0>)
 8000836:	681b      	ldr	r3, [r3, #0]
 8000838:	79fa      	ldrb	r2, [r7, #7]
 800083a:	2101      	movs	r1, #1
 800083c:	fa01 f202 	lsl.w	r2, r1, r2
 8000840:	4611      	mov	r1, r2
 8000842:	4a31      	ldr	r2, [pc, #196]	; (8000908 <GPIO_IRQInterruptConfig+0xf0>)
 8000844:	430b      	orrs	r3, r1
 8000846:	6013      	str	r3, [r2, #0]
				//program ICER2 register
				*NVIC_ICER2 |= ( 1 << (IRQNumber % 64) );
			}
		}

}
 8000848:	e059      	b.n	80008fe <GPIO_IRQInterruptConfig+0xe6>
			}else if(IRQNumber > 31 && IRQNumber < 64 ) //32 to 63
 800084a:	79fb      	ldrb	r3, [r7, #7]
 800084c:	2b1f      	cmp	r3, #31
 800084e:	d90f      	bls.n	8000870 <GPIO_IRQInterruptConfig+0x58>
 8000850:	79fb      	ldrb	r3, [r7, #7]
 8000852:	2b3f      	cmp	r3, #63	; 0x3f
 8000854:	d80c      	bhi.n	8000870 <GPIO_IRQInterruptConfig+0x58>
				*NVIC_ISER1 |= ( 1 << (IRQNumber % 32) );
 8000856:	4b2d      	ldr	r3, [pc, #180]	; (800090c <GPIO_IRQInterruptConfig+0xf4>)
 8000858:	681b      	ldr	r3, [r3, #0]
 800085a:	79fa      	ldrb	r2, [r7, #7]
 800085c:	f002 021f 	and.w	r2, r2, #31
 8000860:	2101      	movs	r1, #1
 8000862:	fa01 f202 	lsl.w	r2, r1, r2
 8000866:	4611      	mov	r1, r2
 8000868:	4a28      	ldr	r2, [pc, #160]	; (800090c <GPIO_IRQInterruptConfig+0xf4>)
 800086a:	430b      	orrs	r3, r1
 800086c:	6013      	str	r3, [r2, #0]
 800086e:	e046      	b.n	80008fe <GPIO_IRQInterruptConfig+0xe6>
			else if(IRQNumber >= 64 && IRQNumber < 96 )
 8000870:	79fb      	ldrb	r3, [r7, #7]
 8000872:	2b3f      	cmp	r3, #63	; 0x3f
 8000874:	d943      	bls.n	80008fe <GPIO_IRQInterruptConfig+0xe6>
 8000876:	79fb      	ldrb	r3, [r7, #7]
 8000878:	2b5f      	cmp	r3, #95	; 0x5f
 800087a:	d840      	bhi.n	80008fe <GPIO_IRQInterruptConfig+0xe6>
				*NVIC_ISER2 |= ( 1 << (IRQNumber % 64) );
 800087c:	4b24      	ldr	r3, [pc, #144]	; (8000910 <GPIO_IRQInterruptConfig+0xf8>)
 800087e:	681b      	ldr	r3, [r3, #0]
 8000880:	79fa      	ldrb	r2, [r7, #7]
 8000882:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000886:	2101      	movs	r1, #1
 8000888:	fa01 f202 	lsl.w	r2, r1, r2
 800088c:	4611      	mov	r1, r2
 800088e:	4a20      	ldr	r2, [pc, #128]	; (8000910 <GPIO_IRQInterruptConfig+0xf8>)
 8000890:	430b      	orrs	r3, r1
 8000892:	6013      	str	r3, [r2, #0]
}
 8000894:	e033      	b.n	80008fe <GPIO_IRQInterruptConfig+0xe6>
			if(IRQNumber <= 31)
 8000896:	79fb      	ldrb	r3, [r7, #7]
 8000898:	2b1f      	cmp	r3, #31
 800089a:	d80a      	bhi.n	80008b2 <GPIO_IRQInterruptConfig+0x9a>
				*NVIC_ICER0 |= ( 1 << IRQNumber );
 800089c:	4b1d      	ldr	r3, [pc, #116]	; (8000914 <GPIO_IRQInterruptConfig+0xfc>)
 800089e:	681b      	ldr	r3, [r3, #0]
 80008a0:	79fa      	ldrb	r2, [r7, #7]
 80008a2:	2101      	movs	r1, #1
 80008a4:	fa01 f202 	lsl.w	r2, r1, r2
 80008a8:	4611      	mov	r1, r2
 80008aa:	4a1a      	ldr	r2, [pc, #104]	; (8000914 <GPIO_IRQInterruptConfig+0xfc>)
 80008ac:	430b      	orrs	r3, r1
 80008ae:	6013      	str	r3, [r2, #0]
}
 80008b0:	e025      	b.n	80008fe <GPIO_IRQInterruptConfig+0xe6>
			}else if(IRQNumber > 31 && IRQNumber < 64 )
 80008b2:	79fb      	ldrb	r3, [r7, #7]
 80008b4:	2b1f      	cmp	r3, #31
 80008b6:	d90f      	bls.n	80008d8 <GPIO_IRQInterruptConfig+0xc0>
 80008b8:	79fb      	ldrb	r3, [r7, #7]
 80008ba:	2b3f      	cmp	r3, #63	; 0x3f
 80008bc:	d80c      	bhi.n	80008d8 <GPIO_IRQInterruptConfig+0xc0>
				*NVIC_ICER1 |= ( 1 << (IRQNumber % 32) );
 80008be:	4b16      	ldr	r3, [pc, #88]	; (8000918 <GPIO_IRQInterruptConfig+0x100>)
 80008c0:	681b      	ldr	r3, [r3, #0]
 80008c2:	79fa      	ldrb	r2, [r7, #7]
 80008c4:	f002 021f 	and.w	r2, r2, #31
 80008c8:	2101      	movs	r1, #1
 80008ca:	fa01 f202 	lsl.w	r2, r1, r2
 80008ce:	4611      	mov	r1, r2
 80008d0:	4a11      	ldr	r2, [pc, #68]	; (8000918 <GPIO_IRQInterruptConfig+0x100>)
 80008d2:	430b      	orrs	r3, r1
 80008d4:	6013      	str	r3, [r2, #0]
 80008d6:	e012      	b.n	80008fe <GPIO_IRQInterruptConfig+0xe6>
			else if(IRQNumber >= 64 && IRQNumber < 96 )
 80008d8:	79fb      	ldrb	r3, [r7, #7]
 80008da:	2b3f      	cmp	r3, #63	; 0x3f
 80008dc:	d90f      	bls.n	80008fe <GPIO_IRQInterruptConfig+0xe6>
 80008de:	79fb      	ldrb	r3, [r7, #7]
 80008e0:	2b5f      	cmp	r3, #95	; 0x5f
 80008e2:	d80c      	bhi.n	80008fe <GPIO_IRQInterruptConfig+0xe6>
				*NVIC_ICER2 |= ( 1 << (IRQNumber % 64) );
 80008e4:	4b0d      	ldr	r3, [pc, #52]	; (800091c <GPIO_IRQInterruptConfig+0x104>)
 80008e6:	681b      	ldr	r3, [r3, #0]
 80008e8:	79fa      	ldrb	r2, [r7, #7]
 80008ea:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80008ee:	2101      	movs	r1, #1
 80008f0:	fa01 f202 	lsl.w	r2, r1, r2
 80008f4:	4611      	mov	r1, r2
 80008f6:	4a09      	ldr	r2, [pc, #36]	; (800091c <GPIO_IRQInterruptConfig+0x104>)
 80008f8:	430b      	orrs	r3, r1
 80008fa:	6013      	str	r3, [r2, #0]
}
 80008fc:	e7ff      	b.n	80008fe <GPIO_IRQInterruptConfig+0xe6>
 80008fe:	bf00      	nop
 8000900:	370c      	adds	r7, #12
 8000902:	46bd      	mov	sp, r7
 8000904:	bc80      	pop	{r7}
 8000906:	4770      	bx	lr
 8000908:	e000e100 	.word	0xe000e100
 800090c:	e000e104 	.word	0xe000e104
 8000910:	e000e108 	.word	0xe000e108
 8000914:	e000e180 	.word	0xe000e180
 8000918:	e000e184 	.word	0xe000e184
 800091c:	e000e188 	.word	0xe000e188

08000920 <GPIO_IRQPriorityConfig>:
void GPIO_IRQPriorityConfig(uint8_t IRQNumber,uint32_t IRQPriority)
{
 8000920:	b480      	push	{r7}
 8000922:	b085      	sub	sp, #20
 8000924:	af00      	add	r7, sp, #0
 8000926:	4603      	mov	r3, r0
 8000928:	6039      	str	r1, [r7, #0]
 800092a:	71fb      	strb	r3, [r7, #7]
	//1. first lets find out the ipr register
		uint8_t iprx = IRQNumber / 4;
 800092c:	79fb      	ldrb	r3, [r7, #7]
 800092e:	089b      	lsrs	r3, r3, #2
 8000930:	73fb      	strb	r3, [r7, #15]
		uint8_t iprx_section  = IRQNumber %4 ;
 8000932:	79fb      	ldrb	r3, [r7, #7]
 8000934:	f003 0303 	and.w	r3, r3, #3
 8000938:	73bb      	strb	r3, [r7, #14]

		uint8_t shift_amount = ( 8 * iprx_section) + ( 8 - NO_PR_BITS_IMPLEMENTED) ;
 800093a:	7bbb      	ldrb	r3, [r7, #14]
 800093c:	00db      	lsls	r3, r3, #3
 800093e:	b2db      	uxtb	r3, r3
 8000940:	3304      	adds	r3, #4
 8000942:	737b      	strb	r3, [r7, #13]

		*(  NVIC_PR_BASE_ADDR + iprx ) |=  ( IRQPriority << shift_amount );
 8000944:	7bfb      	ldrb	r3, [r7, #15]
 8000946:	009b      	lsls	r3, r3, #2
 8000948:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 800094c:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000950:	6819      	ldr	r1, [r3, #0]
 8000952:	7b7b      	ldrb	r3, [r7, #13]
 8000954:	683a      	ldr	r2, [r7, #0]
 8000956:	409a      	lsls	r2, r3
 8000958:	7bfb      	ldrb	r3, [r7, #15]
 800095a:	009b      	lsls	r3, r3, #2
 800095c:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000960:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000964:	430a      	orrs	r2, r1
 8000966:	601a      	str	r2, [r3, #0]
}
 8000968:	bf00      	nop
 800096a:	3714      	adds	r7, #20
 800096c:	46bd      	mov	sp, r7
 800096e:	bc80      	pop	{r7}
 8000970:	4770      	bx	lr
	...

08000974 <GPIO_IRQHandling>:


void GPIO_IRQHandling(uint8_t PinNumber)
{
 8000974:	b480      	push	{r7}
 8000976:	b083      	sub	sp, #12
 8000978:	af00      	add	r7, sp, #0
 800097a:	4603      	mov	r3, r0
 800097c:	71fb      	strb	r3, [r7, #7]
	 //Clear the exti pr register and the processor starts processing the interrupt.
	if(EXTI->PR & (1 << PinNumber)) EXTI->PR |= (1 << PinNumber);
 800097e:	4b0c      	ldr	r3, [pc, #48]	; (80009b0 <GPIO_IRQHandling+0x3c>)
 8000980:	695b      	ldr	r3, [r3, #20]
 8000982:	79fa      	ldrb	r2, [r7, #7]
 8000984:	2101      	movs	r1, #1
 8000986:	fa01 f202 	lsl.w	r2, r1, r2
 800098a:	4013      	ands	r3, r2
 800098c:	2b00      	cmp	r3, #0
 800098e:	d009      	beq.n	80009a4 <GPIO_IRQHandling+0x30>
 8000990:	4b07      	ldr	r3, [pc, #28]	; (80009b0 <GPIO_IRQHandling+0x3c>)
 8000992:	695b      	ldr	r3, [r3, #20]
 8000994:	79fa      	ldrb	r2, [r7, #7]
 8000996:	2101      	movs	r1, #1
 8000998:	fa01 f202 	lsl.w	r2, r1, r2
 800099c:	4611      	mov	r1, r2
 800099e:	4a04      	ldr	r2, [pc, #16]	; (80009b0 <GPIO_IRQHandling+0x3c>)
 80009a0:	430b      	orrs	r3, r1
 80009a2:	6153      	str	r3, [r2, #20]
}
 80009a4:	bf00      	nop
 80009a6:	370c      	adds	r7, #12
 80009a8:	46bd      	mov	sp, r7
 80009aa:	bc80      	pop	{r7}
 80009ac:	4770      	bx	lr
 80009ae:	bf00      	nop
 80009b0:	40013c00 	.word	0x40013c00

080009b4 <__libc_init_array>:
 80009b4:	b570      	push	{r4, r5, r6, lr}
 80009b6:	4d0d      	ldr	r5, [pc, #52]	; (80009ec <__libc_init_array+0x38>)
 80009b8:	4c0d      	ldr	r4, [pc, #52]	; (80009f0 <__libc_init_array+0x3c>)
 80009ba:	1b64      	subs	r4, r4, r5
 80009bc:	10a4      	asrs	r4, r4, #2
 80009be:	2600      	movs	r6, #0
 80009c0:	42a6      	cmp	r6, r4
 80009c2:	d109      	bne.n	80009d8 <__libc_init_array+0x24>
 80009c4:	4d0b      	ldr	r5, [pc, #44]	; (80009f4 <__libc_init_array+0x40>)
 80009c6:	4c0c      	ldr	r4, [pc, #48]	; (80009f8 <__libc_init_array+0x44>)
 80009c8:	f000 f820 	bl	8000a0c <_init>
 80009cc:	1b64      	subs	r4, r4, r5
 80009ce:	10a4      	asrs	r4, r4, #2
 80009d0:	2600      	movs	r6, #0
 80009d2:	42a6      	cmp	r6, r4
 80009d4:	d105      	bne.n	80009e2 <__libc_init_array+0x2e>
 80009d6:	bd70      	pop	{r4, r5, r6, pc}
 80009d8:	f855 3b04 	ldr.w	r3, [r5], #4
 80009dc:	4798      	blx	r3
 80009de:	3601      	adds	r6, #1
 80009e0:	e7ee      	b.n	80009c0 <__libc_init_array+0xc>
 80009e2:	f855 3b04 	ldr.w	r3, [r5], #4
 80009e6:	4798      	blx	r3
 80009e8:	3601      	adds	r6, #1
 80009ea:	e7f2      	b.n	80009d2 <__libc_init_array+0x1e>
 80009ec:	08000a24 	.word	0x08000a24
 80009f0:	08000a24 	.word	0x08000a24
 80009f4:	08000a24 	.word	0x08000a24
 80009f8:	08000a28 	.word	0x08000a28

080009fc <memset>:
 80009fc:	4402      	add	r2, r0
 80009fe:	4603      	mov	r3, r0
 8000a00:	4293      	cmp	r3, r2
 8000a02:	d100      	bne.n	8000a06 <memset+0xa>
 8000a04:	4770      	bx	lr
 8000a06:	f803 1b01 	strb.w	r1, [r3], #1
 8000a0a:	e7f9      	b.n	8000a00 <memset+0x4>

08000a0c <_init>:
 8000a0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a0e:	bf00      	nop
 8000a10:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a12:	bc08      	pop	{r3}
 8000a14:	469e      	mov	lr, r3
 8000a16:	4770      	bx	lr

08000a18 <_fini>:
 8000a18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a1a:	bf00      	nop
 8000a1c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a1e:	bc08      	pop	{r3}
 8000a20:	469e      	mov	lr, r3
 8000a22:	4770      	bx	lr
